{"version":3,"file":"static/js/75.0689ea8a.chunk.js","mappings":"4OAGaA,EAAYC,EAAAA,GAAAA,IAAH,4HAOTC,EAAOD,EAAAA,GAAAA,GAAH,8GAOJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAIRI,EAAOJ,EAAAA,GAAAA,GAAH,oqBA6BJK,EAAeL,EAAAA,GAAAA,IAAH,iLAUZM,EAAMN,EAAAA,GAAAA,IAAH,+FAMHO,EAAQP,EAAAA,GAAAA,EAAH,gH,kBCzClB,EArBwB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OAEjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACX,EAAD,WACE,SAACE,EAAD,UACGO,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,YAAYC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,KAAvB,OACR,SAACX,EAAD,WACI,UAACF,EAAD,CAAUc,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA9C,UACmB,OAAdI,GAAsB,SAACR,EAAD,WACvB,SAACC,EAAD,CAAKa,IAAKC,EAAAA,EAAeP,EAAaQ,IAAKP,OAC5B,SAACT,EAAD,KAChB,SAACE,EAAD,UAAQO,GAASC,QALbH,EADH,OAYvB,C,6ECGD,UArBuB,WACnB,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAsBC,KAAKH,GAAWI,OAAM,SAAAC,GAC5CC,QAAQC,IAAI,QAAQF,EACrB,GAEF,GAAE,IAEH,IAAQG,EAAYvB,EAAZuB,QAER,GAAKA,EAIL,OACI,SAAC,UAAD,CAAiBvB,OAASuB,GAEjC,C","sources":["components/SearchMovieList/SearchMovieList.styled.jsx","components/SearchMovieList/SearchMovieList.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 50px 20px 50px 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  margin-right: auto;\n  margin-left: auto;\n  text-decoration: none;\n  cursor: pointer;\n  display: block;\n  height: auto;\n  width: 250px;\n  border-radius: 5px;\n  overflow: hidden;\n\n  box-shadow: 0px 1px 7px 3px rgba(29, 16, 102, 0.75);\n  :hover {\n    box-shadow: 0px 0px 7px 6px rgba(32, 28, 59, 0.75);\n  }\n  @media screen and (min-width: 390px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 725px) {\n    width: calc((100% - 20px * 2) / 3);\n  }\n  @media screen and (min-width: 1080px) {\n    width: calc((100% - 20px * 3) / 4);\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 20px * 4) / 5);\n  }\n`;\n\nexport const ItemImgCover = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 250px;\n  height: 375px;\n  background-color: #a1a1a1;\n  overflow: hidden;\n  object-fit: cover;\n`;\n\nexport const Img = styled.img`\n  display: inline-block;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Title = styled.p`\n  padding: 10px;\n  font-weight: 700;\n  font-size: 16px;\n  color: rgb(29, 107, 125);\n`;\n","import { BASE_URL_IMAGE } from '../refs';\nimport { Container, List, Item, ItemImgCover, Img, Title, LinkItem } from \"./SearchMovieList.styled\";\nimport { useLocation } from 'react-router-dom';\n\nconst SearchMovieList = ({ movies }) => {\n\n    const location = useLocation();\n   \n    return (\n        <Container>\n          <List>\n            {movies.map(({id,poster_path,title,name}) => (\n                <Item key={id}>\n                    <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n                        {poster_path!==null ? (<ItemImgCover>\n                        <Img src={BASE_URL_IMAGE+poster_path} alt={title}/>\n                    </ItemImgCover>) : <ItemImgCover></ItemImgCover>}\n                       <Title>{title || name}</Title> \n                    </LinkItem>\n                </Item>))}\n            </List>\n        </Container>\n    )\n}\n\nexport default SearchMovieList;","import SearchMovieList from 'components/SearchMovieList/SearchMovieList';\nimport {useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../../API/fetchApi';\n\n\nconst TrendingMovies = () => {\n    const [movies, setMovies] = useState([]);\n \n    useEffect(() => {\n        fetchTrendingMovies().then(setMovies).catch(error => {\n        console.log('Error',error);\n      });\n            \n    }, []);\n\n    const { results } = movies;\n\n    if (!results) {\n        return;\n    }\n\n    return ( \n        <SearchMovieList movies={ results}/>\n    )\n}\n\nexport default TrendingMovies;\n\n"],"names":["Container","styled","List","LinkItem","Link","Item","ItemImgCover","Img","Title","movies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","BASE_URL_IMAGE","alt","useState","setMovies","useEffect","fetchTrendingMovies","then","catch","error","console","log","results"],"sourceRoot":""}