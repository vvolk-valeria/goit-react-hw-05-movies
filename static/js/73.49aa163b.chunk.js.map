{"version":3,"file":"static/js/73.49aa163b.chunk.js","mappings":"8PAEaA,EAAYC,EAAAA,GAAAA,IAAH,4HAOTC,EAAOD,EAAAA,GAAAA,GAAH,wIAQJE,EAAWF,EAAAA,GAAAA,GAAH,8kBAwBRG,EAAeH,EAAAA,GAAAA,IAAH,uMAWZI,EAAQJ,EAAAA,GAAAA,EAAH,yC,SCblB,EAjCa,WACT,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GAASO,KAAKH,EAChC,GAAE,CAACJ,KAECG,GAAyC,IAA1BA,EAAYK,KAAKC,OACjC,OACI,0BACI,iFAIZ,IAAQD,EAASL,EAATK,KAER,OACI,SAACd,EAAD,WACA,SAACE,EAAD,UACKY,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,aAA7B,OACN,UAACjB,EAAD,WACyB,OAAfiB,GAAuB,SAAChB,EAAD,WACzB,gBAAKiB,IAAKC,EAAAA,EAAeF,EAAcG,IAAKJ,OAC7B,SAACf,EAAD,KAEnB,SAACC,EAAD,UAAQa,KACR,SAACb,EAAD,UAAQc,MANGF,EADT,OAWrB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 50px 20px 50px 20px;\n`;\n\nexport const List = styled.ul`\n  text-decoration: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const LinkItem = styled.li`\n  text-decoration: none;\n  padding: 4px;\n  color: rgb(32, 89, 102);\n  font-weight: 600;\n  font-size: 14px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 2px 2px rgba(146, 207, 235, 0.75);\n\n  @media screen and (min-width: 390px) {\n    width: calc((100% - 10px * 4) / 5);\n  }\n  @media screen and (min-width: 725px) {\n    width: calc((100% - 10px * 5) / 6);\n  }\n  @media screen and (min-width: 1080px) {\n    width: calc((100% - 10px * 6) / 7);\n  }\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 10px * 7) / 8);\n  }\n`;\n\nexport const ItemImgCover = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 80px;\n  height: 120px;\n  background-color: #a1a1a1;\n  overflow: hidden;\n  object-fit: cover;\n  margin-bottom: 6px;\n`;\n\nexport const Title = styled.p`\n  padding: 4px;\n`;\n","import { fetchMovieCast } from 'API/fetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_URL_IMAGE } from '../refs';\nimport { Container,List,LinkItem,ItemImgCover,Title } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castMembers, setCastMembers] = useState(null);\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(setCastMembers);\n    }, [movieId]);\n     \n    if (!castMembers || castMembers.cast.length===0) {\n        return (\n            <div>\n                <p>We have no information about the cast of this film.</p>\n            </div>);\n    }\n\n    const { cast } = castMembers;\n\n    return (\n        <Container>\n        <List>\n            {cast.map(({ cast_id, character, name, profile_path }) => (\n                <LinkItem key={cast_id}>\n                         {profile_path!==null ? (<ItemImgCover>\n                        <img src={BASE_URL_IMAGE+profile_path} alt={name}/>\n                    </ItemImgCover>) : <ItemImgCover></ItemImgCover>}\n                    \n                    <Title>{character}</Title>\n                    <Title>{name}</Title>\n                </LinkItem>))}\n        </List>\n    </Container>)\n}\n\nexport default Cast;"],"names":["Container","styled","List","LinkItem","ItemImgCover","Title","movieId","useParams","useState","castMembers","setCastMembers","useEffect","fetchMovieCast","then","cast","length","map","cast_id","character","name","profile_path","src","BASE_URL_IMAGE","alt"],"sourceRoot":""}